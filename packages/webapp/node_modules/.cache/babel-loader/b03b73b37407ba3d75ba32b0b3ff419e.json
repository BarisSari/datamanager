{"ast":null,"code":"import _objectSpread from \"/home/huy/Programming/Freelancer/migrate_about_us_page_to_django/datamanager/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/huy/Programming/Freelancer/migrate_about_us_page_to_django/datamanager/packages/webapp/src/components/Treemap/Markup.jsx\";\nimport React from 'react';\nimport { Treemap, Tooltip } from 'recharts';\nimport LeftIcon from '@material-ui/icons/ArrowBack';\nimport Block from './Block';\nimport IEBlock from './IEBlock';\nimport TooltipContent from './TooltipContent';\nimport calcIfForeignObjectIsSupported from './calcIfForeignObjectIsSupported';\nimport { TreemapWrapper, TreemapButtonStyle, TreemapButtonText } from './styled';\n\nvar createBlock = function createBlock(fills, changeSelectedHandler, selected, zoom, icons) {\n  return function (props) {\n    var passedProps = _objectSpread({}, props, {\n      fills: fills,\n      changeSelectedHandler: changeSelectedHandler,\n      selected: selected,\n      zoom: zoom,\n      icons: icons\n    });\n\n    if (calcIfForeignObjectIsSupported()) {\n      return React.createElement(Block, Object.assign({}, passedProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }));\n    } else {\n      console.log(\"Using non-foreignObject treemap\");\n      return React.createElement(IEBlock, Object.assign({}, passedProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }));\n    }\n  };\n};\n\nvar Markup = function Markup(_ref) {\n  var items = _ref.items,\n      changeSelectedHandler = _ref.changeSelectedHandler,\n      selected = _ref.selected,\n      fills = _ref.fills,\n      screenWidth = _ref.screenWidth,\n      zoom = _ref.zoom,\n      hasChildren = _ref.hasChildren,\n      unsetZoomHandler = _ref.unsetZoomHandler;\n  var widthWithPadding = screenWidth - 48;\n  var width = widthWithPadding > 1200 ? 1200 : widthWithPadding;\n\n  var createButton = function createButton() {\n    return React.createElement(TreemapButtonStyle, {\n      onClick: unsetZoomHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(LeftIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(TreemapButtonText, {\n      component: \"span\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Provinces\"));\n  };\n\n  return React.createElement(TreemapWrapper, Object.assign({\n    width: width\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(Treemap, Object.assign({\n    width: width\n  }, {\n    key: width,\n    height: 650,\n    data: items,\n    dataKey: \"amount\",\n    animationDuration: 600,\n    tooltip: true,\n    isAnimationActive: false,\n    content: createBlock(fills, changeSelectedHandler, selected, zoom, hasChildren),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), !!zoom && createButton());\n};\n\nexport default Markup;","map":{"version":3,"sources":["/home/huy/Programming/Freelancer/migrate_about_us_page_to_django/datamanager/packages/webapp/src/components/Treemap/Markup.jsx"],"names":["React","Treemap","Tooltip","LeftIcon","Block","IEBlock","TooltipContent","calcIfForeignObjectIsSupported","TreemapWrapper","TreemapButtonStyle","TreemapButtonText","createBlock","fills","changeSelectedHandler","selected","zoom","icons","props","passedProps","console","log","Markup","items","screenWidth","hasChildren","unsetZoomHandler","widthWithPadding","width","createButton"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,UAAjC;AACA,OAAOC,QAAP,MAAqB,8BAArB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,8BAAP,MAA2C,kCAA3C;AAEA,SAASC,cAAT,EAAyBC,kBAAzB,EAA6CC,iBAA7C,QAAsE,UAAtE;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,qBAAR,EAA+BC,QAA/B,EAAyCC,IAAzC,EAA+CC,KAA/C;AAAA,SAAyD,UAAAC,KAAK,EAAI;AACpF,QAAMC,WAAW,qBAAQD,KAAR;AAAeL,MAAAA,KAAK,EAALA,KAAf;AAAsBC,MAAAA,qBAAqB,EAArBA,qBAAtB;AAA6CC,MAAAA,QAAQ,EAARA,QAA7C;AAAuDC,MAAAA,IAAI,EAAJA,IAAvD;AAA6DC,MAAAA,KAAK,EAALA;AAA7D,MAAjB;;AACA,QAAIT,8BAA8B,EAAlC,EAAsC;AACpC,aAAO,oBAAC,KAAD,oBAAWW,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD,KAFD,MAEO;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACA,aAAO,oBAAC,OAAD,oBAAaF,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;AACF,GARmB;AAAA,CAApB;;AAUA,IAAMG,MAAM,GAAG,SAATA,MAAS,OAST;AAAA,MARJC,KAQI,QARJA,KAQI;AAAA,MAPJT,qBAOI,QAPJA,qBAOI;AAAA,MANJC,QAMI,QANJA,QAMI;AAAA,MALJF,KAKI,QALJA,KAKI;AAAA,MAJJW,WAII,QAJJA,WAII;AAAA,MAHJR,IAGI,QAHJA,IAGI;AAAA,MAFJS,WAEI,QAFJA,WAEI;AAAA,MADJC,gBACI,QADJA,gBACI;AACJ,MAAMC,gBAAgB,GAAGH,WAAW,GAAG,EAAvC;AACA,MAAMI,KAAK,GAAGD,gBAAgB,GAAG,IAAnB,GAA0B,IAA1B,GAAiCA,gBAA/C;;AAEA,MAAME,YAAY,GAAG,SAAfA,YAAe;AAAA,WACnB,oBAAC,kBAAD;AAAoB,MAAA,OAAO,EAAEH,gBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,iBAAD;AAAmB,MAAA,SAAS,EAAC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,CADmB;AAAA,GAArB;;AAOA,SACE,oBAAC,cAAD,gBAAoB;AAAEE,IAAAA,KAAK,EAALA;AAAF,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,oBAAC,OAAD,gBACM;AAAEA,IAAAA,KAAK,EAALA;AAAF,GADN;AAEE,IAAA,GAAG,EAAEA,KAFP;AAGE,IAAA,MAAM,EAAE,GAHV;AAIE,IAAA,IAAI,EAAEL,KAJR;AAKE,IAAA,OAAO,EAAC,QALV;AAME,IAAA,iBAAiB,EAAE,GANrB;AAOE,IAAA,OAAO,MAPT;AAQE,IAAA,iBAAiB,EAAE,KARrB;AASE,IAAA,OAAO,EAAEX,WAAW,CAACC,KAAD,EAAQC,qBAAR,EAA+BC,QAA/B,EAAyCC,IAAzC,EAA+CS,WAA/C,CATtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAYG,CAAC,CAACT,IAAF,IAAUa,YAAY,EAZzB,CADF;AAgBD,CApCD;;AAsCA,eAAeP,MAAf","sourcesContent":["import React from 'react';\nimport { Treemap, Tooltip } from 'recharts';\nimport LeftIcon from '@material-ui/icons/ArrowBack';\n\nimport Block from './Block';\nimport IEBlock from './IEBlock';\nimport TooltipContent from './TooltipContent';\nimport calcIfForeignObjectIsSupported from './calcIfForeignObjectIsSupported';\n\nimport { TreemapWrapper, TreemapButtonStyle, TreemapButtonText } from './styled';\n\nconst createBlock = (fills, changeSelectedHandler, selected, zoom, icons) => props => {\n  const passedProps = { ...props, fills, changeSelectedHandler, selected, zoom, icons };\n  if (calcIfForeignObjectIsSupported()) {\n    return <Block {...passedProps} />;\n  } else {\n    console.log(\"Using non-foreignObject treemap\");\n    return <IEBlock {...passedProps} />;\n  }\n};\n\nconst Markup = ({\n  items,\n  changeSelectedHandler,\n  selected,\n  fills,\n  screenWidth,\n  zoom,\n  hasChildren,\n  unsetZoomHandler,\n}) => {\n  const widthWithPadding = screenWidth - 48;\n  const width = widthWithPadding > 1200 ? 1200 : widthWithPadding;\n\n  const createButton = () => (\n    <TreemapButtonStyle onClick={unsetZoomHandler}>\n      <LeftIcon />\n      <TreemapButtonText component=\"span\">Provinces</TreemapButtonText>\n    </TreemapButtonStyle>\n  );\n\n  return (\n    <TreemapWrapper {...{ width }}>\n      <Treemap\n        {...{ width }}\n        key={width}\n        height={650}\n        data={items}\n        dataKey=\"amount\"\n        animationDuration={600}\n        tooltip\n        isAnimationActive={false}\n        content={createBlock(fills, changeSelectedHandler, selected, zoom, hasChildren)}\n      />\n      {!!zoom && createButton()}\n    </TreemapWrapper>\n  );\n};\n\nexport default Markup;\n"]},"metadata":{},"sourceType":"module"}