{"ast":null,"code":"import _classCallCheck from \"/home/huy/Programming/Freelancer/migrate_about_us_page_to_django/datamanager/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/huy/Programming/Freelancer/migrate_about_us_page_to_django/datamanager/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/huy/Programming/Freelancer/migrate_about_us_page_to_django/datamanager/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/huy/Programming/Freelancer/migrate_about_us_page_to_django/datamanager/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/huy/Programming/Freelancer/migrate_about_us_page_to_django/datamanager/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/huy/Programming/Freelancer/migrate_about_us_page_to_django/datamanager/packages/webapp/src/adaptors/infrastructure-pages.js\";\nimport axios from 'axios';\nimport React, { createElement, Component } from 'react';\nimport { render } from 'react-dom';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport Infrastructure from '../views/Infrastructure';\nimport Loading from '../views/Loading';\n\nvar isConnectionYear = function isConnectionYear(year) {\n  return year === '2017' || year === '2018';\n};\n\nvar buildEne = function buildEne(url) {\n  return {\n    heading: 'Read more in the Department Budget',\n    format: 'PDF',\n    link: url\n  };\n};\n\nvar datasetUrl = function datasetUrl(url) {\n  return {\n    heading: 'Infrastructure Project Data',\n    format: 'CSV',\n    link: url\n  };\n};\n\nvar parseProjects = function parseProjects(projects, dataset_url) {\n  return projects.map(function (project) {\n    return {\n      id: project.slug,\n      subheading: project.department.name,\n      heading: project.name,\n      points: project.coordinates.map(function (_ref, id) {\n        var y = _ref.latitude,\n            x = _ref.longitude;\n        return {\n          id: id.toString(),\n          x: x,\n          y: y\n        };\n      }),\n      activeProvinces: project.provinces,\n      stage: project.stage,\n      totalBudget: project.total_budget,\n      projectedBudget: project.projected_budget,\n      description: project.description,\n      link: project.slug,\n      resources: [buildEne(project.department.budget_document), datasetUrl(dataset_url)].filter(function (_ref2) {\n        var link = _ref2.link;\n        return !!link;\n      }),\n      chartData: project.expenditure.map(function (obj) {\n        return {\n          name: obj.year,\n          Actual: obj.budget_phase === 'Audited Outcome' ? obj.amount : null,\n          Projected: obj.budget_phase !== 'Audited Outcome' ? obj.amount : null,\n          Connection: isConnectionYear(obj.year) ? obj.amount : null\n        };\n      }),\n      sideInfo: {\n        investment: project.nature_of_investment,\n        infrastructure: project.infrastructure_type,\n        department: project.department\n      }\n    };\n  });\n};\n\nvar InfrastructurePages =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(InfrastructurePages, _Component);\n\n  function InfrastructurePages(props) {\n    var _this;\n\n    _classCallCheck(this, InfrastructurePages);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfrastructurePages).call(this, props));\n    _this.state = {\n      loading: true,\n      projects: [],\n      datasetUrl: null,\n      points: []\n    };\n    return _this;\n  }\n\n  _createClass(InfrastructurePages, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('/json/infrastructure-projects.json').then(function (_ref3) {\n        var data = _ref3.data;\n\n        _this2.setState({\n          loading: false,\n          datasetUrl: data.dataset_url,\n          projects: parseProjects(data.projects, data.dataset_url)\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          projects = _this$state.projects,\n          points = _this$state.points,\n          loading = _this$state.loading,\n          datasetUrl = _this$state.datasetUrl;\n      var _this$props = this.props,\n          budgetReviewUrl = _this$props.budgetReviewUrl,\n          details = _this$props.details,\n          projectId = _this$props.projectId;\n\n      if (loading) {\n        return createElement(Loading);\n      }\n\n      return createElement(Infrastructure, {\n        projects: projects,\n        points: points,\n        datasetUrl: datasetUrl,\n        budgetReviewUrl: budgetReviewUrl,\n        Link: Link,\n        details: details,\n        projectId: projectId\n      });\n    }\n  }]);\n\n  return InfrastructurePages;\n}(Component);\n\nvar node = document.querySelector('[data-webapp=\"infrastructure-pages\"]');\nvar budgetReviewUrl = !!node && node.getAttribute('data-webapp-budgetReviewUrl');\n\nvar connection = function connection() {\n  if (node) {\n    return render(React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/infrastructure-projects\",\n      component: function component() {\n        return React.createElement(InfrastructurePages, Object.assign({\n          budgetReviewUrl: budgetReviewUrl\n        }, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/infrastructure-projects/:projectId\",\n      component: function component(_ref4) {\n        var match = _ref4.match;\n        return React.createElement(InfrastructurePages, Object.assign({\n          budgetReviewUrl: budgetReviewUrl\n        }, {\n          projectId: match.params.projectId,\n          details: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }))), node);\n  }\n};\n\nexport default connection();","map":{"version":3,"sources":["/home/huy/Programming/Freelancer/migrate_about_us_page_to_django/datamanager/packages/webapp/src/adaptors/infrastructure-pages.js"],"names":["axios","React","createElement","Component","render","BrowserRouter","Router","Route","Link","Infrastructure","Loading","isConnectionYear","year","buildEne","url","heading","format","link","datasetUrl","parseProjects","projects","dataset_url","map","project","id","slug","subheading","department","name","points","coordinates","y","latitude","x","longitude","toString","activeProvinces","provinces","stage","totalBudget","total_budget","projectedBudget","projected_budget","description","resources","budget_document","filter","chartData","expenditure","obj","Actual","budget_phase","amount","Projected","Connection","sideInfo","investment","nature_of_investment","infrastructure","infrastructure_type","InfrastructurePages","props","state","loading","get","then","data","setState","budgetReviewUrl","details","projectId","node","document","querySelector","getAttribute","connection","match","params"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { createElement, Component } from 'react';\nimport { render } from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link\n} from 'react-router-dom'\nimport Infrastructure from '../views/Infrastructure';\nimport Loading from '../views/Loading';\n\nconst isConnectionYear = year => year === '2017' || year === '2018';\n\n\nconst buildEne = url => ({\n  heading: 'Read more in the Department Budget',\n  format: 'PDF',\n  link: url,\n});\n\n\nconst datasetUrl = url => ({\n  heading: 'Infrastructure Project Data',\n  format: 'CSV',\n  link: url,\n});\n\n\nconst parseProjects = (projects, dataset_url) => projects.map(project => ({\n  id: project.slug,\n  subheading: project.department.name,\n  heading: project.name,\n  points: project.coordinates.map(({ latitude: y, longitude: x }, id) => ({ id: id.toString(), x, y })),\n  activeProvinces: project.provinces,\n  stage: project.stage,\n  totalBudget: project.total_budget,\n  projectedBudget: project.projected_budget,\n  description: project.description,\n  link: project.slug,\n  resources: [\n    buildEne(project.department.budget_document),\n    datasetUrl(dataset_url),\n  ].filter(({ link }) => !!link),\n  chartData: project.expenditure.map(obj => ({\n    name: obj.year,\n    Actual: obj.budget_phase === 'Audited Outcome' ? obj.amount : null,\n    Projected: obj.budget_phase !== 'Audited Outcome' ? obj.amount : null,\n    Connection : isConnectionYear(obj.year) ? obj.amount : null,\n  })),\n  sideInfo: {\n    investment: project.nature_of_investment,\n    infrastructure: project.infrastructure_type,\n    department: project.department,\n  },\n}))\n\nclass InfrastructurePages extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      projects: [],\n      datasetUrl: null,\n      points: [],\n    }\n  }\n\n  componentDidMount() {\n    axios.get('/json/infrastructure-projects.json')\n      .then(({ data }) => {\n        this.setState({\n        loading: false,\n        datasetUrl: data.dataset_url,\n        projects: parseProjects(data.projects, data.dataset_url),\n      })})\n  }\n\n  render() {\n    const { projects, points, loading, datasetUrl } = this.state;\n    const { budgetReviewUrl, details, projectId } = this.props;\n\n    if (loading) {\n      return createElement(Loading);\n    }\n\n    return createElement(Infrastructure, { projects, points, datasetUrl, budgetReviewUrl, Link, details, projectId })\n  }\n}\n\n\nconst node = document.querySelector('[data-webapp=\"infrastructure-pages\"]');\nconst budgetReviewUrl = !!node && node.getAttribute('data-webapp-budgetReviewUrl');\n\n\nconst connection = () => {\n  if (node) {\n    return render(\n      (\n        <Router>\n          <div>\n            <Route\n              exact\n              path=\"/infrastructure-projects\"\n              component={() => <InfrastructurePages {...{ budgetReviewUrl }} />}\n            />\n            <Route\n              path=\"/infrastructure-projects/:projectId\"\n              component={\n                ({ match }) => (\n                  <InfrastructurePages {...{ budgetReviewUrl }} projectId={match.params.projectId} details />\n                )\n              }\n            />\n          </div>\n        </Router>\n      ),\n      node,\n    );\n  }\n};\n\n\nexport default connection();\n"]},"metadata":{},"sourceType":"module"}