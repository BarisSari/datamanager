{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/huy/Programming/Freelancer/migrate_about_us_page_to_django/datamanager/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/huy/Programming/Freelancer/migrate_about_us_page_to_django/datamanager/packages/webapp/src/components/ResourceList/index.jsx\";\n\nfunction _templateObject14() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-wrap: wrap;\\n\"]);\n\n  _templateObject14 = function _templateObject14() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject13() {\n  var data = _taggedTemplateLiteral([\"\\n  text-decoration: none;\\n\"]);\n\n  _templateObject13 = function _templateObject13() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject12() {\n  var data = _taggedTemplateLiteral([\"\\n  && {\\n    background-color: rgba(255, 255, 255, 0.1);\\n    color: white;\\n    &:hover {\\n      background-color: rgba(255, 255, 255, 0.2);\\n    }\\n  }\\n\"]);\n\n  _templateObject12 = function _templateObject12() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject11() {\n  var data = _taggedTemplateLiteral([\"\\n   && {\\n      color: #ffffff;\\n   }\\n\"]);\n\n  _templateObject11 = function _templateObject11() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteral([\"\\n  && {\\n    color: #ffffff;\\n    height: 16px;\\n    margin-bottom: 16px;\\n  }\\n\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"\\n  &&{ \\n    background-color: #3F3F3F;\\n  }\\n\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n  display: none;\\n  font-size: 12px;\\n  @media screen and (min-width: 375px) {\\n    display: flex;\\n    justify-content: flex-start;\\n  }\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n  && {\\n    padding: 6px;\\n    min-width: 0;\\n    width: 40px;\\n    height: 57px;\\n    text-transform: none;\\n    box-shadow: none;\\n    \\n    @media screen and (min-width: 375px) {\\n      padding: 6px 16px;\\n      display: flex;\\n      justify-content: space-between;\\n      min-width: 193px;\\n      width: 100%;\\n      height: 32px;\\n    }\\n  }\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  line-height: 23px;\\n  font-size: 16px;\\n  padding-bottom: 16px;\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  &&&& {\\n    padding: 16px;\\n    width: 100%;\\n    display: flex;\\n    justify-content: space-between;\\n    @media screen and (min-width: 375px) {\\n      display: flex;\\n      flex-direction: column;\\n    }\\n  }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  && {\\n    width: 100%;\\n    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.25);\\n\\n    @media screen and (min-width: 768px) {\\n      display: flex;\\n    }\\n\\n    transition: transform 500ms;\\n\\n    &:hover {\\n      box-shadow: 0 2px 2px rgba(0, 0, 0, 0.05), 0 10px 10px rgba(0, 0, 0, 0.2);\\n      transform: translate(-2px, -2px);\\n    }\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 10px;\\n  width: 100%;\\n  box-sizing: border-box;\\n  height: 100%;\\n\\n  @media screen and (min-width: 600px) {\\n    max-width: 50%;\\n  }\\n\\n  @media screen and (min-width: 1000px) {\\n    max-width: \", \"%;\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  && {\\n    color: grey;\\n    font-size: 10px;\\n    letter-spacing: 0.5px;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  && {\\n    font-size: 14px;\\n    color: #000000;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport copy from 'copy-to-clipboard';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/icons/ArrowDownward';\nimport Copy from '@material-ui/icons/FileCopy';\nimport { Typography } from '@material-ui/core';\nvar Title = styled(Typography)(_templateObject());\nvar Size = styled(Typography)(_templateObject2());\nvar CardWrapper = styled.div(_templateObject3(), 100 / 3);\nvar StyledCard = styled(Card)(_templateObject4());\nvar CardContentWrapper = styled(CardContent)(_templateObject5());\nvar HeadingText = styled.div(_templateObject6());\nvar ButtonBtn = styled(Button)(_templateObject7());\nvar SpanText = styled.span(_templateObject8());\nvar CardBlack = styled(StyledCard)(_templateObject9());\nvar TitleBlack = styled(Title)(_templateObject10());\nvar SubHeading = styled(Size)(_templateObject11());\nvar ButtonBtnBlack = styled(ButtonBtn)(_templateObject12());\nvar BtnLink = styled.a(_templateObject13());\nvar iconSize = {\n  height: '16px',\n  width: '16px'\n};\n\nvar createResource = function createResource(props) {\n  var heading = props.heading,\n      size = props.size,\n      format = props.format,\n      link = props.link;\n  var SizeAndFormat = !!size ? React.createElement(Size, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, size, \" - \", format) : React.createElement(Size, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, format);\n  return React.createElement(CardWrapper, {\n    key: heading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(StyledCard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(CardContentWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(HeadingText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, heading), SizeAndFormat), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(BtnLink, {\n    href: link,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(ButtonBtn, {\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(SpanText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, format === 'Web' ? 'View' : 'Download'), format !== 'Web' && React.createElement(Icon, {\n    style: iconSize,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  })))))));\n};\n\nvar createCitation = function createCitation(name) {\n  return \"South African National Treasury Infrastructure Report 2019 - \".concat(name);\n};\n\nvar CopyCitation = function CopyCitation(_ref) {\n  var name = _ref.name;\n  return React.createElement(CardWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(CardBlack, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(CardContentWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(HeadingText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, React.createElement(TitleBlack, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, \"How to cite this data\"), React.createElement(SubHeading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, createCitation(name))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(ButtonBtnBlack, {\n    variant: \"contained\",\n    onClick: function onClick() {\n      return copy(createCitation(name));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(SpanText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \"Copy to clipboard\"), React.createElement(Copy, {\n    style: iconSize,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }))))));\n};\n\nvar List = styled.div(_templateObject14());\n\nvar Resources = function Resources(_ref2) {\n  var resources = _ref2.resources,\n      cite = _ref2.cite;\n  return React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, resources.map(createResource), !!cite && React.createElement(CopyCitation, {\n    name: cite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }));\n}; // Resources.propTypes = {\n//   /** Array of data to loop from for card details */\n//   resources: t.arrayOf(t.shape({\n//     /** Displays the title of the file to be downloaded */\n//     heading: t.string.isRequired,\n//     /** This can be a string or empty string or null. It displays the size of the file to download,\n//      * or nothing if button redirects to a website url instead.\n//      */\n//     size: t.string,\n//     /** Displays the format of the file to be downloaded */\n//     format: t.string.isRequired,\n//     /** url that links to the file to be downloaded or redirects to desired website */\n//     link: t.string.isRequired,\n//   })).isRequired,\n//   /** True or false depending whether an extra card displaying a call to action card with custom styling placed\n//   as the last card in the list of cards */\n//   cite: t.bool\n// }\n// Resources.defaultProps = {\n//   size: null,\n//   cite: false,\n// }\n\n\nexport default Resources;","map":{"version":3,"sources":["/home/huy/Programming/Freelancer/migrate_about_us_page_to_django/datamanager/packages/webapp/src/components/ResourceList/index.jsx"],"names":["React","styled","copy","Card","CardContent","Button","Icon","Copy","Typography","Title","Size","CardWrapper","div","StyledCard","CardContentWrapper","HeadingText","ButtonBtn","SpanText","span","CardBlack","TitleBlack","SubHeading","ButtonBtnBlack","BtnLink","a","iconSize","height","width","createResource","props","heading","size","format","link","SizeAndFormat","createCitation","name","CopyCitation","List","Resources","resources","cite","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport copy from 'copy-to-clipboard';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/icons/ArrowDownward';\nimport Copy from '@material-ui/icons/FileCopy';\nimport { Typography } from '@material-ui/core';\n\n\n\nconst Title = styled(Typography)`\n  && {\n    font-size: 14px;\n    color: #000000;\n  }\n`;\n\nconst Size = styled(Typography)`\n  && {\n    color: grey;\n    font-size: 10px;\n    letter-spacing: 0.5px;\n  }\n`;\n\nconst CardWrapper = styled.div`\n  padding: 10px;\n  width: 100%;\n  box-sizing: border-box;\n  height: 100%;\n\n  @media screen and (min-width: 600px) {\n    max-width: 50%;\n  }\n\n  @media screen and (min-width: 1000px) {\n    max-width: ${100 / 3}%;\n  }\n`;\n\nconst StyledCard = styled(Card)`\n  && {\n    width: 100%;\n    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.25);\n\n    @media screen and (min-width: 768px) {\n      display: flex;\n    }\n\n    transition: transform 500ms;\n\n    &:hover {\n      box-shadow: 0 2px 2px rgba(0, 0, 0, 0.05), 0 10px 10px rgba(0, 0, 0, 0.2);\n      transform: translate(-2px, -2px);\n    }\n  }\n`;\n\nconst CardContentWrapper = styled(CardContent)`\n  &&&& {\n    padding: 16px;\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    @media screen and (min-width: 375px) {\n      display: flex;\n      flex-direction: column;\n    }\n  }\n`;\n\nconst HeadingText = styled.div`\n  line-height: 23px;\n  font-size: 16px;\n  padding-bottom: 16px;\n`;\n\n\nconst ButtonBtn = styled(Button)`\n  && {\n    padding: 6px;\n    min-width: 0;\n    width: 40px;\n    height: 57px;\n    text-transform: none;\n    box-shadow: none;\n    \n    @media screen and (min-width: 375px) {\n      padding: 6px 16px;\n      display: flex;\n      justify-content: space-between;\n      min-width: 193px;\n      width: 100%;\n      height: 32px;\n    }\n  }\n`;\n\nconst SpanText = styled.span`\n  display: none;\n  font-size: 12px;\n  @media screen and (min-width: 375px) {\n    display: flex;\n    justify-content: flex-start;\n  }\n`;\n\nconst CardBlack = styled(StyledCard)`\n  &&{ \n    background-color: #3F3F3F;\n  }\n`;\n\nconst TitleBlack = styled(Title)`\n  && {\n    color: #ffffff;\n    height: 16px;\n    margin-bottom: 16px;\n  }\n`;\n\nconst SubHeading = styled(Size)`\n   && {\n      color: #ffffff;\n   }\n`;\n\nconst ButtonBtnBlack = styled(ButtonBtn)`\n  && {\n    background-color: rgba(255, 255, 255, 0.1);\n    color: white;\n    &:hover {\n      background-color: rgba(255, 255, 255, 0.2);\n    }\n  }\n`;\n\n\nconst BtnLink = styled.a`\n  text-decoration: none;\n`;\n\n\nconst iconSize = {\n  height:'16px',\n  width: '16px',\n}\n\nconst createResource = (props) => {\n  const {\n    heading,\n    size,\n    format,\n    link,\n  } = props;\n\n  const SizeAndFormat = !!size ? (\n    <Size>{size} - {format}</Size>\n  ) : (\n    <Size>{format}</Size>\n  )\n\n  return (\n    <CardWrapper key={heading}>\n      <StyledCard>\n        <CardContentWrapper>\n          <HeadingText>\n            <Title>{heading}</Title>\n            {SizeAndFormat}\n          </HeadingText>\n          <div>\n            <BtnLink href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n              <ButtonBtn variant=\"contained\">\n                <SpanText>{format === 'Web' ? 'View' : 'Download'}</SpanText>\n                {format !== 'Web' && <Icon style={iconSize} />}\n              </ButtonBtn>\n              </BtnLink>\n          </div>\n        </CardContentWrapper>\n      </StyledCard>\n    </CardWrapper>\n  );\n};\n\n\nconst createCitation = name => `South African National Treasury Infrastructure Report 2019 - ${name}`;\n\n\nconst CopyCitation = ({ name }) => {\n\n  return (\n    <CardWrapper>\n      <CardBlack>\n        <CardContentWrapper>\n          <HeadingText>\n            <TitleBlack>How to cite this data</TitleBlack>\n            <SubHeading>{createCitation(name)}</SubHeading>\n          </HeadingText>\n          <div>\n            <ButtonBtnBlack variant=\"contained\" onClick={() => copy(createCitation(name))}>\n              <SpanText>Copy to clipboard</SpanText>\n              <Copy style={iconSize} />\n            </ButtonBtnBlack>\n          </div>\n        </CardContentWrapper>\n      </CardBlack>\n    </CardWrapper>\n  )\n};\n\nconst List = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Resources = ({ resources, cite }) => (\n  <List>\n    {resources.map(createResource)}\n    {!!cite && <CopyCitation name={cite} />}\n  </List>\n);\n\n// Resources.propTypes = {\n//   /** Array of data to loop from for card details */\n//   resources: t.arrayOf(t.shape({\n//     /** Displays the title of the file to be downloaded */\n//     heading: t.string.isRequired,\n//     /** This can be a string or empty string or null. It displays the size of the file to download,\n//      * or nothing if button redirects to a website url instead.\n//      */\n//     size: t.string,\n//     /** Displays the format of the file to be downloaded */\n//     format: t.string.isRequired,\n//     /** url that links to the file to be downloaded or redirects to desired website */\n//     link: t.string.isRequired,\n//   })).isRequired,\n//   /** True or false depending whether an extra card displaying a call to action card with custom styling placed\n//   as the last card in the list of cards */\n//   cite: t.bool\n// }\n\n// Resources.defaultProps = {\n//   size: null,\n//   cite: false,\n// }\n\nexport default Resources;\n"]},"metadata":{},"sourceType":"module"}