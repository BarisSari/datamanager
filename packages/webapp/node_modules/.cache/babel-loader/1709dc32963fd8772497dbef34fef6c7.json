{"ast":null,"code":"var _jsxFileName = \"/home/huy/Programming/Freelancer/migrate_about_us_page_to_django/datamanager/packages/webapp/src/components/BarChart/Bar/Markup.jsx\";\nimport React from 'react';\nimport trimValues from '../../../helpers/trimValues';\nimport { BarChartTotal, ColorBar, Title, Amount, Details } from './styled';\n\nvar createlabel = function createlabel(title, amount, textNode, labelOutside) {\n  return React.createElement(Details, Object.assign({\n    ref: textNode\n  }, {\n    labelOutside: labelOutside\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(Title, {\n    component: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, title), React.createElement(Amount, {\n    component: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"R\".concat(trimValues(amount))));\n};\n\nvar callColorBar = function callColorBar(ratio, title, amount, textNode, componentNode, labelOutside, fills, index) {\n  var color = fills[index];\n\n  if (labelOutside) {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(ColorBar, Object.assign({\n      ref: componentNode\n    }, {\n      ratio: ratio,\n      color: color\n    }, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    })), createlabel(title, amount, textNode, labelOutside));\n  }\n\n  return React.createElement(ColorBar, Object.assign({\n    ref: componentNode\n  }, {\n    ratio: ratio,\n    color: color\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), createlabel(title, amount, textNode));\n};\n\nvar Bar = function Bar(props) {\n  var ratio = props.ratio,\n      title = props.title,\n      amount = props.amount,\n      labelOutside = props.labelOutside,\n      textNode = props.textNode,\n      componentNode = props.componentNode,\n      fills = props.fills,\n      index = props.index;\n  return React.createElement(BarChartTotal, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, callColorBar(ratio, title, amount, textNode, componentNode, labelOutside, fills, index));\n};\n\nexport default Bar;","map":{"version":3,"sources":["/home/huy/Programming/Freelancer/migrate_about_us_page_to_django/datamanager/packages/webapp/src/components/BarChart/Bar/Markup.jsx"],"names":["React","trimValues","BarChartTotal","ColorBar","Title","Amount","Details","createlabel","title","amount","textNode","labelOutside","callColorBar","ratio","componentNode","fills","index","color","Bar","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,6BAAvB;AAEA,SACEC,aADF,EAEEC,QAFF,EAGEC,KAHF,EAIEC,MAJF,EAKEC,OALF,QAMQ,UANR;;AAQA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,MAAR,EAAgBC,QAAhB,EAA0BC,YAA1B;AAAA,SAClB,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAED;AAAd,KAA4B;AAAEC,IAAAA,YAAY,EAAZA;AAAF,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBH,KAAxB,CADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA6BP,UAAU,CAACQ,MAAD,CAAvC,EAFF,CADkB;AAAA,CAApB;;AAOA,IAAMG,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAQL,KAAR,EAAeC,MAAf,EAAuBC,QAAvB,EAAiCI,aAAjC,EAAgDH,YAAhD,EAA8DI,KAA9D,EAAqEC,KAArE,EAA+E;AAClG,MAAMC,KAAK,GAAGF,KAAK,CAACC,KAAD,CAAnB;;AAEA,MAAIL,YAAJ,EAAkB;AAChB,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEG;AAAf,OAAkC;AAAED,MAAAA,KAAK,EAALA,KAAF;AAASI,MAAAA,KAAK,EAALA;AAAT,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,EAEGV,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAgBC,QAAhB,EAA0BC,YAA1B,CAFd,CADF;AAMD;;AACD,SACE,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEG;AAAf,KAAkC;AAAED,IAAAA,KAAK,EAALA,KAAF;AAASI,IAAAA,KAAK,EAALA;AAAT,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGV,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAgBC,QAAhB,CADd,CADF;AAKD,CAhBD;;AAkBA,IAAMQ,GAAG,GAAG,SAANA,GAAM,CAAAC,KAAK,EAAI;AAAA,MAEjBN,KAFiB,GAUfM,KAVe,CAEjBN,KAFiB;AAAA,MAGjBL,KAHiB,GAUfW,KAVe,CAGjBX,KAHiB;AAAA,MAIjBC,MAJiB,GAUfU,KAVe,CAIjBV,MAJiB;AAAA,MAKjBE,YALiB,GAUfQ,KAVe,CAKjBR,YALiB;AAAA,MAMjBD,QANiB,GAUfS,KAVe,CAMjBT,QANiB;AAAA,MAOjBI,aAPiB,GAUfK,KAVe,CAOjBL,aAPiB;AAAA,MAQjBC,KARiB,GAUfI,KAVe,CAQjBJ,KARiB;AAAA,MASjBC,KATiB,GAUfG,KAVe,CASjBH,KATiB;AAYnB,SACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,YAAY,CAACC,KAAD,EAAQL,KAAR,EAAeC,MAAf,EAAuBC,QAAvB,EAAiCI,aAAjC,EAAgDH,YAAhD,EAA8DI,KAA9D,EAAqEC,KAArE,CADf,CADF;AAKD,CAjBD;;AAmBA,eAAeE,GAAf","sourcesContent":["import React from 'react';\n\nimport trimValues from '../../../helpers/trimValues'\n\nimport {\n  BarChartTotal,\n  ColorBar,\n  Title,\n  Amount,\n  Details\n } from './styled';\n\nconst createlabel = (title, amount, textNode, labelOutside) => (\n  <Details ref={textNode} {...{ labelOutside }}>\n    <Title component='div'>{title}</Title>\n    <Amount component='div'>{`R${trimValues(amount)}`}</Amount>\n  </Details>\n);\n\nconst callColorBar = (ratio, title, amount, textNode, componentNode, labelOutside, fills, index) => {\n  const color = fills[index];\n\n  if (labelOutside) {\n    return (\n      <React.Fragment>\n        <ColorBar ref={componentNode} {...{ ratio, color }} />\n        {createlabel(title, amount, textNode, labelOutside)}\n      </React.Fragment>\n    );\n  }\n  return (\n    <ColorBar ref={componentNode} {...{ ratio, color }}>\n      {createlabel(title, amount, textNode)}\n    </ColorBar>\n  );\n};\n\nconst Bar = props => {\n  const {\n    ratio,\n    title,\n    amount,\n    labelOutside,\n    textNode,\n    componentNode,\n    fills,\n    index\n  } = props;\n\n  return (\n    <BarChartTotal>\n      {callColorBar(ratio, title, amount, textNode, componentNode, labelOutside, fills, index)}\n    </BarChartTotal>\n  )\n};\n\nexport default Bar;\n"]},"metadata":{},"sourceType":"module"}