{"ast":null,"code":"var _jsxFileName = \"/home/huy/Programming/Freelancer/migrate_about_us_page_to_django/datamanager/packages/webapp/src/components/Treemap/IEBlock.jsx\";\nimport React from 'react';\nimport { lighten } from 'polished';\nimport trimValues from '../../helpers/trimValues';\n\nfunction makeLabel(x, y, width, height, text, isBold, clickHandler, fontSize, padding) {\n  var estimatedWidth = text.length * (fontSize * 0.6);\n\n  if (estimatedWidth > width) {\n    var estimatedFittingChars = Math.floor(width / fontSize);\n    if (estimatedFittingChars < 4) return null;\n    text = text.slice(0, estimatedFittingChars) + \"...\";\n  }\n\n  var style = {\n    fontSize: fontSize,\n    fontFamily: \"Roboto, sans-serif\",\n    fontWeight: isBold ? \"600\" : '400',\n    cursor: \"pointer\"\n  };\n  return React.createElement(\"text\", {\n    x: x + padding,\n    y: y + fontSize + padding,\n    style: style,\n    onClick: clickHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, text);\n}\n\nvar IEBlock = function IEBlock(props) {\n  var depth = props.depth,\n      x = props.x,\n      y = props.y,\n      id = props.id,\n      url = props.url,\n      width = props.width,\n      height = props.height,\n      color = props.color,\n      selected = props.selected,\n      name = props.name,\n      amount = props.amount,\n      changeSelectedHandler = props.changeSelectedHandler,\n      children = props.children,\n      root = props.root,\n      zoom = props.zoom,\n      icon = props.icon;\n\n  if (depth === 1) {\n    var clickHandler = function clickHandler() {\n      return changeSelectedHandler({\n        id: id,\n        name: name,\n        color: color,\n        value: amount,\n        url: url,\n        zoom: zoom\n      });\n    };\n\n    var fontSize = 14;\n    var padding = 10;\n    var lineSpacing = 5;\n    var showLabels = fontSize * 2 + lineSpacing + padding * 2 <= height;\n    return React.createElement(\"g\", {\n      style: {\n        pointerEvents: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"rect\", {\n      x: x,\n      y: y,\n      width: width,\n      height: height,\n      style: {\n        fill: color,\n        cursor: \"pointer\",\n        pointerEvents: \"fill\",\n        stroke: lighten(0.1, color),\n        strokeWidth: 2\n      },\n      onClick: clickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), showLabels && makeLabel(x, y, width, height, name, true, clickHandler, fontSize, padding), showLabels && makeLabel(x, y + 19, width, height, \"R\".concat(trimValues(amount, true)), false, clickHandler, fontSize, padding));\n  }\n\n  if (depth === 2) {\n    var rootName = root.name;\n    var fullName = \"\".concat(rootName, \": \").concat(name);\n    return React.createElement(\"g\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"rect\", {\n      x: x,\n      y: y,\n      width: width,\n      height: height,\n      style: {\n        fill: 'none',\n        stroke: lighten(0.1, color),\n        strokeWidth: 2,\n        pointerEvents: \"fill\",\n        cursor: \"pointer\"\n      },\n      onClick: function onClick() {\n        return changeSelectedHandler({\n          id: id,\n          name: fullName,\n          color: color,\n          value: amount,\n          url: url,\n          zoom: rootName\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }));\n  } // depth < 1\n\n\n  return null;\n};\n\nexport default IEBlock;","map":{"version":3,"sources":["/home/huy/Programming/Freelancer/migrate_about_us_page_to_django/datamanager/packages/webapp/src/components/Treemap/IEBlock.jsx"],"names":["React","lighten","trimValues","makeLabel","x","y","width","height","text","isBold","clickHandler","fontSize","padding","estimatedWidth","length","estimatedFittingChars","Math","floor","slice","style","fontFamily","fontWeight","cursor","IEBlock","props","depth","id","url","color","selected","name","amount","changeSelectedHandler","children","root","zoom","icon","value","lineSpacing","showLabels","pointerEvents","fill","stroke","strokeWidth","rootName","fullName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { lighten } from 'polished';\nimport trimValues from '../../helpers/trimValues';\n\n\nfunction makeLabel(x, y, width, height, text, isBold, clickHandler, fontSize, padding) {\n  var estimatedWidth = text.length * (fontSize*0.6);\n\n  if (estimatedWidth > width) {\n    var estimatedFittingChars = Math.floor(width / fontSize);\n    if (estimatedFittingChars < 4)\n      return null;\n\n    text = text.slice(0, estimatedFittingChars) + \"...\";\n  }\n\n  const style = {\n    fontSize,\n    fontFamily: \"Roboto, sans-serif\",\n    fontWeight: isBold ? \"600\" : '400',\n    cursor: \"pointer\",\n  };\n  return <text\n           x={x + padding}\n           y={y + fontSize + padding}\n           style={style}\n           onClick={clickHandler}\n         >\n           {text}\n         </text>;\n}\n\n\nconst IEBlock = props => {\n  const {\n    depth,\n    x,\n    y,\n    id,\n    url,\n    width,\n    height,\n    color,\n    selected,\n    name,\n    amount,\n    changeSelectedHandler,\n    children,\n    root,\n    zoom,\n    icon,\n  } = props;\n\n  if (depth === 1) {\n    const clickHandler = () => changeSelectedHandler({ id, name, color, value: amount, url, zoom });\n    const fontSize = 14;\n    const padding = 10;\n    const lineSpacing = 5;\n    const showLabels = (fontSize*2 + lineSpacing + padding*2) <= height;\n\n    return (\n      <g style={{ pointerEvents: \"none\" }}>\n        <rect\n          x={x}\n          y={y}\n          width={width}\n          height={height}\n          style={{\n            fill: color,\n            cursor: \"pointer\",\n            pointerEvents: \"fill\",\n            stroke: lighten(0.1, color),\n            strokeWidth: 2,\n          }}\n          onClick={clickHandler}\n        />\n        {showLabels && makeLabel(x, y, width, height, name, true, clickHandler, fontSize, padding)}\n        {showLabels && makeLabel(x, y+19, width, height, `R${trimValues(amount, true)}`, false, clickHandler, fontSize, padding)}\n      </g>\n    );\n  }\n\n  if (depth === 2) {\n    const { name: rootName } = root;\n    const fullName = `${rootName}: ${name}`;\n\n    return (\n      <g>\n        <rect\n          x={x}\n          y={y}\n          width={width}\n          height={height}\n          style={{\n            fill: 'none',\n            stroke: lighten(0.1, color),\n            strokeWidth: 2,\n            pointerEvents: \"fill\",\n            cursor: \"pointer\",\n          }}\n          onClick={() =>\n                   changeSelectedHandler({\n                     id,\n                     name: fullName,\n                     color,\n                     value: amount,\n                     url,\n                     zoom: rootName,\n                   })\n                  }\n        />\n      </g>\n    );\n  }\n\n  // depth < 1\n  return null;\n};\n\n\nexport default IEBlock;\n"]},"metadata":{},"sourceType":"module"}