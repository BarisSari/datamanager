{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/huy/Programming/Freelancer/migrate_about_us_page_to_django/datamanager/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/huy/Programming/Freelancer/migrate_about_us_page_to_django/datamanager/packages/webapp/src/components/InfraChart/index.jsx\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  &&& {\\n    background: black;\\n    border-radius: 50px;\\n    min-width: 36px;\\n    width: 36px;\\n    height: 36px;\\n    text-transform: none;\\n    font-family: Lato;\\n    font-size: 16px;\\n    font-weight: 700;\\n    box-shadow: none;\\n    opacity: \", \";\\n    margin-right: 4px;\\n    margin-left: 4px;\\n    fill: white;\\n    color: white;\\n\\n    &:hover {\\n      background: \", \";\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  && {\\n    background: #76b649;\\n    border-radius: 5px;\\n    color: white;\\n    font-size: 16px;\\n    font-family: Lato;\\n    padding: 10px;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Fragment } from 'react';\nimport styled from 'styled-components';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport LeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport RightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport { darken } from 'polished';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport trimValues from '../../helpers/trimValues';\nvar xAxisStyles = {\n  fontSize: '12px',\n  fontFamily: 'Lato',\n  fontWeight: 700,\n  fill: 'black'\n};\nvar yAxisStyles = {\n  fontSize: '12px',\n  fontFamily: 'Lato',\n  fontWeight: 700,\n  fill: 'black'\n};\n\nvar axisTrimValue = function axisTrimValue(value) {\n  return \"R\".concat(trimValues(value, true));\n};\n\nvar StyledTooltip = styled(Paper)(_templateObject());\n\nvar Content = function Content(_ref) {\n  var _ref$payload = _ref.payload,\n      payload = _ref$payload === void 0 ? [] : _ref$payload;\n  var filtered = payload.filter(function (_ref2) {\n    var name = _ref2.name;\n    return name !== 'Connection';\n  });\n\n  var _ref3 = filtered[0] || {},\n      name = _ref3.name,\n      value = _ref3.value;\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(StyledTooltip, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, name, \": R\", trimValues(value, true)));\n};\n\nvar Dot = function Dot(_ref4) {\n  var cx = _ref4.cx,\n      cy = _ref4.cy;\n\n  if (!cx || !cy) {\n    return null;\n  }\n\n  var isMobile = window.innerWidth < 500;\n  return React.createElement(\"circle\", Object.assign({\n    cx: cx,\n    cy: cy\n  }, {\n    fill: isMobile ? 'none' : '#76B649',\n    stroke: \"none\",\n    r: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }));\n};\n\nvar ActiveDot = function ActiveDot(_ref5) {\n  var cx = _ref5.cx,\n      cy = _ref5.cy;\n\n  if (!cx || !cy) {\n    return null;\n  }\n\n  return React.createElement(\"circle\", Object.assign({\n    cx: cx,\n    cy: cy\n  }, {\n    fill: \"#76B649\",\n    stroke: \"none\",\n    r: \"7\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }));\n};\n\nvar GreyButton = styled(Button)(_templateObject2(), function (_ref6) {\n  var disabled = _ref6.disabled;\n  return disabled ? 0.2 : 1;\n}, darken(0.1, '#C4C4C4'));\n\nvar InfraChart = function InfraChart(_ref7) {\n  var data = _ref7.data;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 340,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(LineChart, {\n    width: 500,\n    height: 300,\n    data: data,\n    margin: {\n      top: 30,\n      right: 60,\n      left: 30,\n      bottom: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(CartesianGrid, {\n    stroke: \"#E6E6E6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), React.createElement(XAxis, {\n    dataKey: \"name\",\n    tickLine: false,\n    dy: 15,\n    style: xAxisStyles,\n    axisLine: {\n      stroke: 'black',\n      strokeWidth: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }), React.createElement(YAxis, {\n    tickFormatter: axisTrimValue,\n    dx: -15,\n    style: yAxisStyles,\n    tickLine: false,\n    axisLine: {\n      stroke: 'black',\n      strokeWidth: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), React.createElement(Line, {\n    dataKey: \"Actual\",\n    stroke: \"#76B649\",\n    strokeWidth: 3,\n    dot: React.createElement(Dot, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }),\n    activeDot: React.createElement(ActiveDot, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }),\n    isAnimationActive: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }), React.createElement(Line, {\n    dataKey: \"Connection\",\n    stroke: \"#76B649\",\n    strokeWidth: 3,\n    strokeDasharray: \"3 4\",\n    dot: false,\n    activeDot: false,\n    isAnimationActive: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }), React.createElement(Line, {\n    dataKey: \"Projected\",\n    stroke: \"#76B649\",\n    strokeWidth: 3,\n    strokeDasharray: \"3 4\",\n    dot: React.createElement(Dot, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }),\n    activeDot: React.createElement(ActiveDot, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }),\n    isAnimationActive: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    active: false,\n    content: React.createElement(Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }),\n    isAnimationActive: false,\n    cursor: {\n      stroke: 'black'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }))));\n};\n\nexport default InfraChart;","map":{"version":3,"sources":["/home/huy/Programming/Freelancer/migrate_about_us_page_to_django/datamanager/packages/webapp/src/components/InfraChart/index.jsx"],"names":["React","Fragment","styled","Paper","Button","LeftIcon","RightIcon","darken","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","trimValues","xAxisStyles","fontSize","fontFamily","fontWeight","fill","yAxisStyles","axisTrimValue","value","StyledTooltip","Content","payload","filtered","filter","name","Dot","cx","cy","isMobile","window","innerWidth","ActiveDot","GreyButton","disabled","InfraChart","data","top","right","left","bottom","stroke","strokeWidth"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport styled from 'styled-components';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport LeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport RightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport { darken } from 'polished';\nimport {\n  LineChart, \n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from 'recharts';\n\nimport trimValues from '../../helpers/trimValues';\n\nconst xAxisStyles = {\n  fontSize: '12px',\n  fontFamily: 'Lato',\n  fontWeight: 700,\n  fill: 'black',\n}\n\n\nconst yAxisStyles = {\n  fontSize: '12px',\n  fontFamily: 'Lato',\n  fontWeight: 700,\n  fill: 'black',\n}\n\n\nconst axisTrimValue = value => `R${trimValues(value, true)}`;\n\n\nconst StyledTooltip = styled(Paper)`\n  && {\n    background: #76b649;\n    border-radius: 5px;\n    color: white;\n    font-size: 16px;\n    font-family: Lato;\n    padding: 10px;\n  }\n`\n\nconst Content = ({ payload = [] }) => {\n  const filtered = payload.filter(({ name }) => name !== 'Connection');\n\n  const { name, value } = filtered[0] || {}; \n\n  return (\n    <Fragment>\n      <StyledTooltip>\n        {name}: R{trimValues(value, true)}\n      </StyledTooltip> \n    </Fragment>\n  )\n}\n\nconst Dot = ({ cx, cy }) => {\n  if (!cx || !cy ) {\n    return null;\n  }\n\n  const isMobile = window.innerWidth < 500;\n\n  return (\n    <circle \n      {...{ cx, cy }}\n      fill={isMobile ? 'none' : '#76B649'}\n      stroke=\"none\"\n      r=\"4\"\n    />\n  )\n}\n\nconst ActiveDot = ({ cx, cy }) => {\n  if (!cx || !cy ) {\n    return null;\n  }\n\n  return (\n    <circle \n      {...{ cx, cy }}\n      fill=\"#76B649\"\n      stroke=\"none\"\n      r=\"7\"\n    />\n  )\n}\n\n\n\nconst GreyButton = styled(Button)`\n  &&& {\n    background: black;\n    border-radius: 50px;\n    min-width: 36px;\n    width: 36px;\n    height: 36px;\n    text-transform: none;\n    font-family: Lato;\n    font-size: 16px;\n    font-weight: 700;\n    box-shadow: none;\n    opacity: ${({ disabled }) => (disabled ? 0.2 : 1)};\n    margin-right: 4px;\n    margin-left: 4px;\n    fill: white;\n    color: white;\n\n    &:hover {\n      background: ${darken(0.1, '#C4C4C4')};\n    }\n  }\n`;\n\nconst InfraChart = ({ data }) => {\n  return (\n    <Fragment>\n      {/* {buttons} */}\n      <ResponsiveContainer width=\"100%\" height={340}>\n        <LineChart\n          width={500}\n          height={300}\n          data={data}\n          margin={{\n            top: 30, right: 60, left: 30, bottom: 30,\n          }}\n        >\n          <CartesianGrid stroke=\"#E6E6E6\" />\n          <XAxis\n            dataKey=\"name\"\n            tickLine={false}\n            dy={15}\n            style={xAxisStyles}\n            axisLine={{\n              stroke: 'black',\n              strokeWidth: 1\n            }}\n          />\n          <YAxis\n            tickFormatter={axisTrimValue}\n            dx={-15}\n            style={yAxisStyles}\n            tickLine={false}\n            axisLine={{\n              stroke: 'black',\n              strokeWidth: 1,\n            }}\n          />\n          <Line \n            dataKey=\"Actual\"\n            stroke=\"#76B649\"\n            strokeWidth={3}\n            dot={<Dot />}\n            activeDot={<ActiveDot />}\n            isAnimationActive={false}\n          />\n          <Line \n            dataKey=\"Connection\"\n            stroke=\"#76B649\"\n            strokeWidth={3}\n            strokeDasharray=\"3 4\"\n            dot={false}\n            activeDot={false}\n            isAnimationActive={false}\n          />\n          <Line\n            dataKey=\"Projected\"\n            stroke=\"#76B649\"\n            strokeWidth={3}\n            strokeDasharray=\"3 4\"\n            dot={<Dot />}\n            activeDot={<ActiveDot />}\n            isAnimationActive={false}\n            />\n          <Tooltip \n            active={false}\n            content={<Content />}\n            isAnimationActive={false}\n            cursor={{\n              stroke: 'black',\n            }}\n          />\n          {/* <ReferenceLine x=\"'19\" stroke=\"black\" label={<Selected />} /> */}\n        </LineChart>\n      </ResponsiveContainer>\n    </Fragment>\n  )\n}\n\n\nexport default InfraChart;\n"]},"metadata":{},"sourceType":"module"}