{"ast":null,"code":"import _objectSpread from \"/home/huy/Programming/Freelancer/migrate_about_us_page_to_django/datamanager/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/huy/Programming/Freelancer/migrate_about_us_page_to_django/datamanager/packages/webapp/src/views/FocusArea/Markup.jsx\";\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport Heading from './Heading';\nimport ChartSection from '../../components/ChartSection';\nimport Treemap from '../../components/Treemap';\nimport Notices from './Notices';\nimport colorsList from '../../helpers/colorsList';\nimport polyfillObjectEntries from '../../helpers/polyfillObjectEntries.js';\nimport { Wrapper, FooterDetails } from './styled';\npolyfillObjectEntries();\n\nvar addDynamicFootnotes = function addDynamicFootnotes(dynamicFootnotes) {\n  return dynamicFootnotes.map(function (footer) {\n    return React.createElement(FooterDetails, {\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(ReactMarkdown, {\n      source: footer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }));\n  });\n};\n\nvar callFootNote = function callFootNote(dynamicFootnotes) {\n  return React.createElement(\"div\", {\n    key: dynamicFootnotes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, !!dynamicFootnotes && addDynamicFootnotes(dynamicFootnotes), React.createElement(FooterDetails, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Flows between spheres have not been netted out.\"));\n};\n\nvar callProvincialChart = function callProvincialChart(selected, initialSelected, items, footnotes, notices) {\n  if (Object.entries(items).length === 0) {\n    return React.createElement(\"div\", {\n      key: \"\".concat(selected, \"-provincial\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(ChartSection, Object.assign({\n      initialSelected: initialSelected\n    }, {\n      chart: function chart() {\n        return React.createElement(Notices, Object.assign({\n          notices: notices\n        }, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }));\n      },\n      title: \"Contributing provincial departments\",\n      footer: callFootNote(footnotes),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })));\n  }\n\n  var addColors = function addColors(innerItems, overrideColor) {\n    return innerItems.map(function (item, index) {\n      return _objectSpread({}, item, {\n        color: overrideColor || colorsList[index],\n        children: item.children ? addColors(item.children, overrideColor || colorsList[index]) : null\n      });\n    });\n  };\n\n  var transformData = function transformData(item) {\n    return _objectSpread({}, item, {\n      id: item.id || item.name,\n      children: !!item.children && item.children.map(transformData)\n    });\n  };\n\n  var itemKeys = Object.keys(items);\n  var itemsAsArray = itemKeys.map(function (key) {\n    return items[key];\n  });\n  var transformedItems = itemsAsArray.map(transformData);\n  var itemsWithColor = addColors(transformedItems);\n  return React.createElement(\"div\", {\n    key: \"\".concat(selected, \"-provincial\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(ChartSection, Object.assign({\n    initialSelected: initialSelected\n  }, {\n    chart: function chart(onSelectedChange) {\n      return React.createElement(Treemap, Object.assign({\n        onSelectedChange: onSelectedChange\n      }, {\n        items: itemsWithColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }));\n    },\n    verb: \"Explore\",\n    subject: \"this department\",\n    title: \"Contributing provincial departments\",\n    anchor: \"contributing-provincial-departments\",\n    footer: callFootNote(footnotes),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })));\n};\n\nvar Markup = function Markup(props) {\n  var items = props.items,\n      departmentNames = props.departmentNames,\n      selected = props.selected,\n      eventHandler = props.eventHandler,\n      initialSelectedNational = props.initialSelectedNational,\n      initialSelectedProvincial = props.initialSelectedProvincial,\n      year = props.year;\n  var selectedInstance = items.find(function (_ref) {\n    var id = _ref.id;\n    return id === selected;\n  });\n  var itemsWithColor = selectedInstance.national.departments.map(function (item, index) {\n    return _objectSpread({}, item, {\n      color: colorsList[index]\n    });\n  });\n  return React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Heading, Object.assign({\n    departmentNames: departmentNames,\n    selected: selected,\n    eventHandler: eventHandler,\n    year: year\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    key: \"\".concat(selected, \"-national\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(ChartSection, {\n    initialSelected: initialSelectedNational,\n    chart: function chart(onSelectedChange) {\n      return React.createElement(Treemap, Object.assign({\n        onSelectedChange: onSelectedChange\n      }, {\n        items: itemsWithColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }));\n    },\n    verb: \"Explore\",\n    subject: \"this department\",\n    title: \"Contributing national departments\",\n    footer: callFootNote(selectedInstance.national.footnotes),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })), callProvincialChart(selected, initialSelectedProvincial, selectedInstance.provincial.provinces, selectedInstance.provincial.footnotes, selectedInstance.provincial.notices));\n};\n\nexport default Markup;","map":{"version":3,"sources":["/home/huy/Programming/Freelancer/migrate_about_us_page_to_django/datamanager/packages/webapp/src/views/FocusArea/Markup.jsx"],"names":["React","ReactMarkdown","Heading","ChartSection","Treemap","Notices","colorsList","polyfillObjectEntries","Wrapper","FooterDetails","addDynamicFootnotes","dynamicFootnotes","map","footer","callFootNote","callProvincialChart","selected","initialSelected","items","footnotes","notices","Object","entries","length","addColors","innerItems","overrideColor","item","index","color","children","transformData","id","name","itemKeys","keys","itemsAsArray","key","transformedItems","itemsWithColor","onSelectedChange","Markup","props","departmentNames","eventHandler","initialSelectedNational","initialSelectedProvincial","year","selectedInstance","find","national","departments","provincial","provinces"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactMarkdown from 'react-markdown';\n\nimport Heading from './Heading';\nimport ChartSection from '../../components/ChartSection';\nimport Treemap from '../../components/Treemap';\nimport Notices from './Notices';\nimport colorsList from '../../helpers/colorsList';\nimport polyfillObjectEntries from '../../helpers/polyfillObjectEntries.js';\n\nimport { Wrapper, FooterDetails } from './styled';\n\npolyfillObjectEntries();\n\nconst addDynamicFootnotes = dynamicFootnotes =>\n  dynamicFootnotes.map(footer => (\n    <FooterDetails component=\"div\">\n      <ReactMarkdown source={footer} />\n    </FooterDetails>\n  ));\n\nconst callFootNote = dynamicFootnotes => (\n  <div key={dynamicFootnotes}>\n    {!!dynamicFootnotes && addDynamicFootnotes(dynamicFootnotes)}\n    <FooterDetails>Flows between spheres have not been netted out.</FooterDetails>\n  </div>\n);\n\nconst callProvincialChart = (selected, initialSelected, items, footnotes, notices) => {\n  if (Object.entries(items).length === 0) {\n    return (\n      <div key={`${selected}-provincial`}>\n        <ChartSection\n          {...{ initialSelected }}\n          chart={() => <Notices {...{ notices }} />}\n          title=\"Contributing provincial departments\"\n          footer={callFootNote(footnotes)}\n        />\n      </div>\n    );\n  }\n\n  const addColors = (innerItems, overrideColor) =>\n    innerItems.map((item, index) => ({\n      ...item,\n      color: overrideColor || colorsList[index],\n      children: item.children ? addColors(item.children, overrideColor || colorsList[index]) : null,\n    }));\n\n  const transformData = item => ({\n    ...item,\n    id: item.id || item.name,\n    children: !!item.children && item.children.map(transformData),\n  });\n\n  const itemKeys = Object.keys(items);\n  const itemsAsArray = itemKeys.map(key => items[key]);\n  const transformedItems = itemsAsArray.map(transformData);\n  const itemsWithColor = addColors(transformedItems);\n\n  return (\n    <div key={`${selected}-provincial`}>\n      <ChartSection\n        {...{ initialSelected }}\n        chart={onSelectedChange => <Treemap {...{ onSelectedChange }} items={itemsWithColor} />}\n        verb=\"Explore\"\n        subject=\"this department\"\n        title=\"Contributing provincial departments\"\n        anchor=\"contributing-provincial-departments\"\n        footer={callFootNote(footnotes)}\n      />\n    </div>\n  );\n};\n\nconst Markup = props => {\n  const {\n    items,\n    departmentNames,\n    selected,\n    eventHandler,\n    initialSelectedNational,\n    initialSelectedProvincial,\n    year,\n  } = props;\n\n  const selectedInstance = items.find(({ id }) => id === selected);\n\n  const itemsWithColor = selectedInstance.national.departments.map((item, index) => ({\n    ...item,\n    color: colorsList[index],\n  }));\n\n  return (\n    <Wrapper>\n      <Heading {...{ departmentNames, selected, eventHandler, year }} />\n      <div key={`${selected}-national`}>\n        <ChartSection\n          initialSelected={initialSelectedNational}\n          chart={onSelectedChange => <Treemap {...{ onSelectedChange }} items={itemsWithColor} />}\n          verb=\"Explore\"\n          subject=\"this department\"\n          title=\"Contributing national departments\"\n          footer={callFootNote(selectedInstance.national.footnotes)}\n        />\n      </div>\n      {callProvincialChart(\n        selected,\n        initialSelectedProvincial,\n        selectedInstance.provincial.provinces,\n        selectedInstance.provincial.footnotes,\n        selectedInstance.provincial.notices,\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Markup;\n"]},"metadata":{},"sourceType":"module"}