{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/huy/Programming/Freelancer/migrate_about_us_page_to_django/datamanager/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/huy/Programming/Freelancer/migrate_about_us_page_to_django/datamanager/packages/webapp/src/views/Homepage/Buttons.jsx\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  display: inline-block;\\n  padding: 7px;\\n  text-decoration: none;\\n\\n  @media screen and (min-width: 650px) {\\n    padding: 8px;\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  display: inline-block;\\n  padding: 7px;\\n  text-decoration: none;\\n\\n  @media screen and (min-width: 650px) {\\n    padding: 8px;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n\\n  @media screen and (min-width: 650px) {\\n    flex-direction: row;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { PrimaryButton, SecondaryButton } from './styled';\nimport { Link as ScrollLink } from 'react-scroll';\nvar ButtonsWrapper = styled.div(_templateObject());\nvar LinkWrapper = styled.a(_templateObject2());\nvar ScrollLinkWrapper = styled(ScrollLink)(_templateObject3());\n\nvar generateLinkProps = function generateLinkProps(link) {\n  if (!link) {\n    return {};\n  }\n\n  return {\n    href: link,\n    target: '_blank',\n    rel: 'noopener noreferrer'\n  };\n};\n\nvar Buttons = function Buttons(_ref) {\n  var primary = _ref.primary,\n      secondary = _ref.secondary;\n  return React.createElement(ButtonsWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(LinkWrapper, Object.assign({}, generateLinkProps(primary.link), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(PrimaryButton, {\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, primary.text)), React.createElement(ScrollLinkWrapper, {\n    to: \"anchor\",\n    smooth: true,\n    duration: 500,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(SecondaryButton, {\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, secondary.text)));\n};\n\nexport default Buttons; // Buttons.propTypes = {\n//   primary: t.shape({\n//     text: t.string,\n//     link: t.string,\n//     clickEvent: t.func,\n//   }).isRequired,\n//   secondary: t.shape({\n//     text: t.string,\n//     link: t.string,\n//     clickEvent: t.func,\n//   }).isRequired,\n// };","map":{"version":3,"sources":["/home/huy/Programming/Freelancer/migrate_about_us_page_to_django/datamanager/packages/webapp/src/views/Homepage/Buttons.jsx"],"names":["React","styled","PrimaryButton","SecondaryButton","Link","ScrollLink","ButtonsWrapper","div","LinkWrapper","a","ScrollLinkWrapper","generateLinkProps","link","href","target","rel","Buttons","primary","secondary","text"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,UAA/C;AACA,SAASC,IAAI,IAAIC,UAAjB,QAAmC,cAAnC;AAGA,IAAMC,cAAc,GAAGL,MAAM,CAACM,GAAV,mBAApB;AAWA,IAAMC,WAAW,GAAGP,MAAM,CAACQ,CAAV,oBAAjB;AAUA,IAAMC,iBAAiB,GAAGT,MAAM,CAACI,UAAD,CAAT,oBAAvB;;AAWA,IAAMM,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,IAAI,EAAI;AAChC,MAAI,CAACA,IAAL,EAAW;AACT,WAAO,EAAP;AACD;;AAED,SAAO;AACLC,IAAAA,IAAI,EAAED,IADD;AAELE,IAAAA,MAAM,EAAE,QAFH;AAGLC,IAAAA,GAAG,EAAE;AAHA,GAAP;AAKD,CAVD;;AAYA,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,MAAGC,OAAH,QAAGA,OAAH;AAAA,MAAYC,SAAZ,QAAYA,SAAZ;AAAA,SACd,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD,oBAAiBP,iBAAiB,CAACM,OAAO,CAACL,IAAT,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCK,OAAO,CAACE,IAA5C,CADF,CADF,EAIE,oBAAC,iBAAD;AAAmB,IAAA,EAAE,EAAC,QAAtB;AAA+B,IAAA,MAAM,EAAE,IAAvC;AAA6C,IAAA,QAAQ,EAAE,GAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAiB,IAAA,OAAO,EAAC,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCD,SAAS,CAACC,IAAhD,CADF,CAJF,CADc;AAAA,CAAhB;;AAYA,eAAeH,OAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { PrimaryButton, SecondaryButton } from './styled';\nimport { Link as ScrollLink } from 'react-scroll';\n\n\nconst ButtonsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media screen and (min-width: 650px) {\n    flex-direction: row;\n  }\n`;\n\n\nconst LinkWrapper = styled.a`\n  display: inline-block;\n  padding: 7px;\n  text-decoration: none;\n\n  @media screen and (min-width: 650px) {\n    padding: 8px;\n  }\n`;\n\nconst ScrollLinkWrapper = styled(ScrollLink)`\n  display: inline-block;\n  padding: 7px;\n  text-decoration: none;\n\n  @media screen and (min-width: 650px) {\n    padding: 8px;\n  }\n`;\n\n\nconst generateLinkProps = link => {\n  if (!link) {\n    return {};\n  }\n\n  return {\n    href: link,\n    target: '_blank',\n    rel: 'noopener noreferrer'\n  }\n}\n\nconst Buttons = ({ primary, secondary }) => (\n  <ButtonsWrapper>\n    <LinkWrapper {...generateLinkProps(primary.link)}>\n      <PrimaryButton variant=\"contained\">{primary.text}</PrimaryButton>\n    </LinkWrapper>\n    <ScrollLinkWrapper to=\"anchor\" smooth={true} duration={500}>\n      <SecondaryButton variant=\"contained\">{secondary.text}</SecondaryButton>\n    </ScrollLinkWrapper>\n  </ButtonsWrapper>\n);\n\n\nexport default Buttons;\n\n\n// Buttons.propTypes = {\n//   primary: t.shape({\n//     text: t.string,\n//     link: t.string,\n//     clickEvent: t.func,\n//   }).isRequired,\n//   secondary: t.shape({\n//     text: t.string,\n//     link: t.string,\n//     clickEvent: t.func,\n//   }).isRequired,\n// };\n"]},"metadata":{},"sourceType":"module"}