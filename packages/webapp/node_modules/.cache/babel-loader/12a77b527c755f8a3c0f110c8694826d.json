{"ast":null,"code":"import _objectSpread from \"/home/huy/Programming/Freelancer/migrate_about_us_page_to_django/datamanager/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/huy/Programming/Freelancer/migrate_about_us_page_to_django/datamanager/packages/webapp/src/views/ProvincialTreemap/index.jsx\";\nimport React from 'react';\nimport MediaQuery from 'react-media';\nimport ChartSection from '../../components/ChartSection';\nimport Treemap from '../../components/Treemap';\nimport colorsList from '../../helpers/colorsList';\nimport sortItems from './sortItems';\n\nvar addColors = function addColors(items, overrideColor) {\n  var sortedItems = sortItems(items);\n  return sortedItems.map(function (item, index) {\n    return _objectSpread({}, item, {\n      color: overrideColor || colorsList[index],\n      children: item.children ? addColors(item.children, overrideColor || colorsList[index]) : null\n    });\n  });\n};\n\nvar transformData = function transformData(item) {\n  return _objectSpread({}, item, {\n    id: item.id || item.name,\n    children: !!item.children && item.children.map(transformData)\n  });\n};\n\nvar Markup = function Markup(_ref) {\n  var items = _ref.items,\n      initialSelected = _ref.initialSelected;\n  var itemKeys = Object.keys(items);\n  var itemsAsArray = itemKeys.map(function (key) {\n    return items[key];\n  });\n  var transformedItems = itemsAsArray.map(transformData);\n  var itemsWithColor = addColors(transformedItems);\n  return React.createElement(ChartSection, Object.assign({\n    initialSelected: initialSelected\n  }, {\n    footer: \"Budget data from 1 April 2018 - 31 March 2019\",\n    chart: function chart(onSelectedChange) {\n      return React.createElement(Treemap, Object.assign({\n        onSelectedChange: onSelectedChange\n      }, {\n        items: itemsWithColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }));\n    },\n    verb: \"Explore\",\n    subject: \"this department\",\n    title: \"Provincial Budget Summary\",\n    phases: {\n      disabled: 'Original budget'\n    },\n    years: {\n      disabled: '2018-19'\n    },\n    anchor: \"provincial-treemap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }));\n};\n\nvar ProvincialTreemap = function ProvincialTreemap(props) {\n  return React.createElement(MediaQuery, {\n    query: \"(min-width: 600px)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, function (matches) {\n    return !!matches && React.createElement(Markup, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }));\n  });\n};\n\nexport default ProvincialTreemap;","map":{"version":3,"sources":["/home/huy/Programming/Freelancer/migrate_about_us_page_to_django/datamanager/packages/webapp/src/views/ProvincialTreemap/index.jsx"],"names":["React","MediaQuery","ChartSection","Treemap","colorsList","sortItems","addColors","items","overrideColor","sortedItems","map","item","index","color","children","transformData","id","name","Markup","initialSelected","itemKeys","Object","keys","itemsAsArray","key","transformedItems","itemsWithColor","onSelectedChange","disabled","ProvincialTreemap","props","matches"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AAEA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AAEA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAQC,aAAR,EAA0B;AAC1C,MAAMC,WAAW,GAAGJ,SAAS,CAACE,KAAD,CAA7B;AACA,SAAOE,WAAW,CAACC,GAAZ,CAAgB,UAACC,IAAD,EAAOC,KAAP;AAAA,6BAClBD,IADkB;AAErBE,MAAAA,KAAK,EAAEL,aAAa,IAAIJ,UAAU,CAACQ,KAAD,CAFb;AAGrBE,MAAAA,QAAQ,EAAEH,IAAI,CAACG,QAAL,GAAgBR,SAAS,CAACK,IAAI,CAACG,QAAN,EAAgBN,aAAa,IAAIJ,UAAU,CAACQ,KAAD,CAA3C,CAAzB,GAA+E;AAHpE;AAAA,GAAhB,CAAP;AAKD,CAPD;;AASA,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAAAJ,IAAI;AAAA,2BACrBA,IADqB;AAExBK,IAAAA,EAAE,EAAEL,IAAI,CAACK,EAAL,IAAWL,IAAI,CAACM,IAFI;AAGxBH,IAAAA,QAAQ,EAAE,CAAC,CAACH,IAAI,CAACG,QAAP,IAAmBH,IAAI,CAACG,QAAL,CAAcJ,GAAd,CAAkBK,aAAlB;AAHL;AAAA,CAA1B;;AAMA,IAAMG,MAAM,GAAG,SAATA,MAAS,OAAgC;AAAA,MAA7BX,KAA6B,QAA7BA,KAA6B;AAAA,MAAtBY,eAAsB,QAAtBA,eAAsB;AAC7C,MAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYf,KAAZ,CAAjB;AACA,MAAMgB,YAAY,GAAGH,QAAQ,CAACV,GAAT,CAAa,UAAAc,GAAG;AAAA,WAAIjB,KAAK,CAACiB,GAAD,CAAT;AAAA,GAAhB,CAArB;AACA,MAAMC,gBAAgB,GAAGF,YAAY,CAACb,GAAb,CAAiBK,aAAjB,CAAzB;AACA,MAAMW,cAAc,GAAGpB,SAAS,CAACmB,gBAAD,CAAhC;AAEA,SACE,oBAAC,YAAD,gBACM;AAAEN,IAAAA,eAAe,EAAfA;AAAF,GADN;AAEE,IAAA,MAAM,EAAC,+CAFT;AAGE,IAAA,KAAK,EAAE,eAAAQ,gBAAgB;AAAA,aAAI,oBAAC,OAAD,gBAAa;AAAEA,QAAAA,gBAAgB,EAAhBA;AAAF,OAAb;AAAmC,QAAA,KAAK,EAAED,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAJ;AAAA,KAHzB;AAIE,IAAA,IAAI,EAAC,SAJP;AAKE,IAAA,OAAO,EAAC,iBALV;AAME,IAAA,KAAK,EAAC,2BANR;AAOE,IAAA,MAAM,EAAE;AACNE,MAAAA,QAAQ,EAAE;AADJ,KAPV;AAUE,IAAA,KAAK,EAAE;AACLA,MAAAA,QAAQ,EAAE;AADL,KAVT;AAaE,IAAA,MAAM,EAAC,oBAbT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAiBD,CAvBD;;AAyBA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,KAAK;AAAA,SAC7B,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,UAAAC,OAAO;AAAA,WAAI,CAAC,CAACA,OAAF,IAAa,oBAAC,MAAD,oBAAYD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAjB;AAAA,GADV,CAD6B;AAAA,CAA/B;;AAMA,eAAeD,iBAAf","sourcesContent":["import React from 'react';\nimport MediaQuery from 'react-media';\n\nimport ChartSection from '../../components/ChartSection';\nimport Treemap from '../../components/Treemap';\n\nimport colorsList from '../../helpers/colorsList';\nimport sortItems from './sortItems';\n\nconst addColors = (items, overrideColor) => {\n  const sortedItems = sortItems(items);\n  return sortedItems.map((item, index) => ({\n    ...item,\n    color: overrideColor || colorsList[index],\n    children: item.children ? addColors(item.children, overrideColor || colorsList[index]) : null,\n  }));\n};\n\nconst transformData = item => ({\n  ...item,\n  id: item.id || item.name,\n  children: !!item.children && item.children.map(transformData),\n});\n\nconst Markup = ({ items, initialSelected }) => {\n  const itemKeys = Object.keys(items);\n  const itemsAsArray = itemKeys.map(key => items[key]);\n  const transformedItems = itemsAsArray.map(transformData);\n  const itemsWithColor = addColors(transformedItems);\n\n  return (\n    <ChartSection\n      {...{ initialSelected }}\n      footer=\"Budget data from 1 April 2018 - 31 March 2019\"\n      chart={onSelectedChange => <Treemap {...{ onSelectedChange }} items={itemsWithColor} />}\n      verb=\"Explore\"\n      subject=\"this department\"\n      title=\"Provincial Budget Summary\"\n      phases={{\n        disabled: 'Original budget',\n      }}\n      years={{\n        disabled: '2018-19',\n      }}\n      anchor=\"provincial-treemap\"\n    />\n  );\n};\n\nconst ProvincialTreemap = props => (\n  <MediaQuery query=\"(min-width: 600px)\">\n    {matches => !!matches && <Markup {...props} />}\n  </MediaQuery>\n);\n\nexport default ProvincialTreemap;\n"]},"metadata":{},"sourceType":"module"}